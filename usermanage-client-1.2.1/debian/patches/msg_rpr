Description: <Repair for the message prompt>
 Repair the prompt message.
 .
 usermanage-client (1.2.1-1) unstable; urgency=low
 .
   * Bug repair
Author: levi <91he@sina.com>

---
The information above should follow the Patch Tagging Guidelines, please
checkout http://dep.debian.net/deps/dep3/ to learn about the format. Here
are templates for supplementary fields that you might want to add:

Origin: <vendor|upstream|other>, <url of original patch>
Bug: <url in upstream bugtracker>
Bug-Debian: http://bugs.debian.org/<bugnumber>
Bug-Ubuntu: https://launchpad.net/bugs/<bugnumber>
Forwarded: <no|not-needed|url proving that it has been forwarded>
Reviewed-By: <name and email of someone who approved the patch>
Last-Update: <YYYY-MM-DD>

--- usermanage-client-1.2.1.orig/src/Makefile.am
+++ usermanage-client-1.2.1/src/Makefile.am
@@ -1,7 +1,7 @@
 bin_PROGRAMS = usermanageclient
-usermanageclient_SOURCES = cJSON.c main.c scrwin.c pool.c
+usermanageclient_SOURCES = cJSON.c main.c scrwin.c pool.c form_check.c
 usermanageclient_CPPFLAGS = $(GTK_CFLAGS)
 
 usermanageclient_LDADD = $(GTK_LIBS) -lcurl
 
-include_HEADERS = scrwin.h cJSON.h pool.h list.h
+include_HEADERS = scrwin.h cJSON.h pool.h list.h form_check.h
--- usermanage-client-1.2.1.orig/src/Makefile.in
+++ usermanage-client-1.2.1/src/Makefile.in
@@ -94,7 +94,8 @@ PROGRAMS = $(bin_PROGRAMS)
 am_usermanageclient_OBJECTS = usermanageclient-cJSON.$(OBJEXT) \
 	usermanageclient-main.$(OBJEXT) \
 	usermanageclient-scrwin.$(OBJEXT) \
-	usermanageclient-pool.$(OBJEXT)
+	usermanageclient-pool.$(OBJEXT) \
+	usermanageclient-form_check.$(OBJEXT)
 usermanageclient_OBJECTS = $(am_usermanageclient_OBJECTS)
 am__DEPENDENCIES_1 =
 usermanageclient_DEPENDENCIES = $(am__DEPENDENCIES_1)
@@ -275,10 +276,10 @@ target_alias = @target_alias@
 top_build_prefix = @top_build_prefix@
 top_builddir = @top_builddir@
 top_srcdir = @top_srcdir@
-usermanageclient_SOURCES = cJSON.c main.c scrwin.c pool.c
+usermanageclient_SOURCES = cJSON.c main.c scrwin.c pool.c form_check.c
 usermanageclient_CPPFLAGS = $(GTK_CFLAGS)
 usermanageclient_LDADD = $(GTK_LIBS) -lcurl
-include_HEADERS = scrwin.h cJSON.h pool.h list.h
+include_HEADERS = scrwin.h cJSON.h pool.h list.h form_check.h
 all: all-am
 
 .SUFFIXES:
@@ -367,6 +368,7 @@ distclean-compile:
 	-rm -f *.tab.c
 
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/usermanageclient-cJSON.Po@am__quote@
+@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/usermanageclient-form_check.Po@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/usermanageclient-main.Po@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/usermanageclient-pool.Po@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/usermanageclient-scrwin.Po@am__quote@
@@ -440,6 +442,20 @@ usermanageclient-pool.obj: pool.c
 @AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='pool.c' object='usermanageclient-pool.obj' libtool=no @AMDEPBACKSLASH@
 @AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
 @am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(usermanageclient_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o usermanageclient-pool.obj `if test -f 'pool.c'; then $(CYGPATH_W) 'pool.c'; else $(CYGPATH_W) '$(srcdir)/pool.c'; fi`
+
+usermanageclient-form_check.o: form_check.c
+@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(usermanageclient_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT usermanageclient-form_check.o -MD -MP -MF $(DEPDIR)/usermanageclient-form_check.Tpo -c -o usermanageclient-form_check.o `test -f 'form_check.c' || echo '$(srcdir)/'`form_check.c
+@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/usermanageclient-form_check.Tpo $(DEPDIR)/usermanageclient-form_check.Po
+@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='form_check.c' object='usermanageclient-form_check.o' libtool=no @AMDEPBACKSLASH@
+@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
+@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(usermanageclient_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o usermanageclient-form_check.o `test -f 'form_check.c' || echo '$(srcdir)/'`form_check.c
+
+usermanageclient-form_check.obj: form_check.c
+@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(usermanageclient_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT usermanageclient-form_check.obj -MD -MP -MF $(DEPDIR)/usermanageclient-form_check.Tpo -c -o usermanageclient-form_check.obj `if test -f 'form_check.c'; then $(CYGPATH_W) 'form_check.c'; else $(CYGPATH_W) '$(srcdir)/form_check.c'; fi`
+@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/usermanageclient-form_check.Tpo $(DEPDIR)/usermanageclient-form_check.Po
+@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='form_check.c' object='usermanageclient-form_check.obj' libtool=no @AMDEPBACKSLASH@
+@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
+@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(usermanageclient_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o usermanageclient-form_check.obj `if test -f 'form_check.c'; then $(CYGPATH_W) 'form_check.c'; else $(CYGPATH_W) '$(srcdir)/form_check.c'; fi`
 install-includeHEADERS: $(include_HEADERS)
 	@$(NORMAL_INSTALL)
 	@list='$(include_HEADERS)'; test -n "$(includedir)" || list=; \
--- /dev/null
+++ usermanage-client-1.2.1/src/form_check.c
@@ -0,0 +1,102 @@
+#include <ctype.h>
+#include <stdio.h>
+#include <string.h>
+#include <stdlib.h>
+
+int pwd_check(const char *str){
+	int r = 1;
+	char *PWD_STR = "0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ~`!@#$%^&*_-+=|\\{[}]:;\"'<,>.?/";
+	char *tmp = (char*)str;
+	
+	while(*tmp){
+		if(!strchr(PWD_STR, *tmp)){
+			r = 0;//格式
+			break;
+		}
+		tmp++;
+	}
+
+//	if(tmp - str > 16)
+//		r = 2;//长度
+
+	return r;
+}
+
+int mail_check(const char *str){
+	int r = 0;
+	char *end;
+	char *front = strdup(str);
+	char *tmp = front;
+	
+	do{
+		if(!(end = strchr(front, '@'))){
+			break;
+		}
+
+		*end++ = 0;
+
+		if(*tmp == '_' || !*tmp){
+			break;
+		}
+
+		while(*tmp){
+			if(!isdigit(*tmp) && !isalpha(*tmp) && '_' != *tmp){
+				tmp = NULL;
+				break;
+			}
+			tmp++;
+		}
+		if(!tmp) break;
+
+		tmp = end;
+		
+		while(*tmp){
+			if(!isdigit(*tmp) && !isalpha(*tmp) && *tmp != '.'){
+				tmp = NULL;
+				break;
+			}
+			tmp++;
+		}
+		if(!tmp) break;
+
+		if(!(tmp = strchr(end, '.'))){
+			break;
+		}
+
+		do{
+			if(!(tmp - end) || !tmp[1] || '.' == tmp[1]){
+				end = NULL;
+				break;
+			}
+			end = ++tmp;
+		}while(tmp = strchr(end, '.'));
+		if(!end) break;
+
+		r = 1;
+	}while(0);
+
+	free(front);
+
+	return r;
+}
+#if 0
+int main(){
+	char *PWD_STR = "0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ~`!@#$%^&*_-+=|\\{[}]:;\"'<,>.?/";
+
+	if(pwd_check(PWD_STR)){
+		printf("hello\n");
+	}else{
+		printf("bad!!!!\n");
+	}
+
+	//char *mail = "91he@sina.com";
+	char *mail = "test@sina.com";
+
+	if(mail_check(mail)){
+		printf("right!\n");
+	}else{
+		printf("!!!!!!\n");
+	}
+	return 0;
+}
+#endif
--- /dev/null
+++ usermanage-client-1.2.1/src/form_check.h
@@ -0,0 +1,7 @@
+#ifndef FORM_CHECK_H
+#define FORM_CHECK_H
+
+int pwd_check(const char *str);
+
+int mail_check(const char *str);
+#endif
--- usermanage-client-1.2.1.orig/src/main.c
+++ usermanage-client-1.2.1/src/main.c
@@ -10,6 +10,7 @@
 #include "pool.h"
 #include "cJSON.h"
 #include "scrwin.h"
+#include "form_check.h"
 
 GtkTreeIter cur_iter;
 GtkTreeIter del_iter;
@@ -473,6 +474,10 @@ gboolean register_send(GtkWidget *widget
 		sprintf(prompt_message, "密码长度不能小于6位!");
 		goto error;
 	}
+	if(!pwd_check(passwd)){
+		sprintf(prompt_message, "密码应以数字、字母或特殊符号组成!");
+		goto error;
+	}
 
 	cJSON *obj = cJSON_CreateObject();
 	cJSON *jtype = cJSON_CreateString("3");
@@ -493,6 +498,11 @@ gboolean register_send(GtkWidget *widget
 			cJSON_Delete(obj);
 			goto error;
 		}
+		if(!mail_check(email)){
+			sprintf(prompt_message, "邮箱格式不正确!");
+			cJSON_Delete(obj);
+			goto error;
+		}
 		cJSON *jemail = cJSON_CreateString(email);
 		cJSON_AddItemToObject(obj, "email", jemail);
 	}
@@ -1310,7 +1320,7 @@ gboolean passwd_cb(GtkWidget *widget, gp
 	char *buf, prompt_message[64];
 	struct required_widgets *data = user_data;
 	const gchar *pwd = gtk_entry_get_text(GTK_ENTRY(data->pwd));
-	if(!strcmp(loguser, "root")) pwd = "111111";
+	if(!strcmp(loguser, "root")) pwd = "1";
 	const gchar *pwd1 = gtk_entry_get_text(GTK_ENTRY(data->pwd1));
 	const gchar *pwd2 = gtk_entry_get_text(GTK_ENTRY(data->pwd2));
 
@@ -1340,6 +1350,10 @@ gboolean passwd_cb(GtkWidget *widget, gp
 		sprintf(prompt_message, "新密码不能与原密码相同!");
 		goto error;
 	}
+	if(!pwd_check(pwd1)){
+		sprintf(prompt_message, "密码应以数字、字母或特殊符号组成!");
+		goto error;
+	}
 	/*TODO*///judge passwd ro email is lawye
 
 	obj = cJSON_CreateObject();
@@ -2631,6 +2645,8 @@ gboolean process_message(gpointer user_d
 		cJSON *msg_obj = cJSON_GetObjectItem(obj, "reason");
 		if(msg_obj)
 			sprintf(prompt_message, "错误: %s", error_msg_2_gbk(msg_obj->valuestring));
+		if(r == '4' && *(msg_obj->valuestring) == '7')
+			sprintf(prompt_message, "错误: 密码错误！");
 		r = -1;
 	}else if(tmp->valuestring[0] == '1'){
 		switch(r){
